{"version":3,"sources":["components/DeleteTodo.js","components/TodoList.js","common/DialogBox.js","components/AddTodo.js","App.js","reportWebVitals.js","index.js"],"names":["DeleteTodo","props","handleDeleteTodo","bind","window","confirm","this","setTodos","prevTodos","filter","t","id","todo","role","onClick","style","color","fontWeight","marginLeft","React","Component","TodoList","handleToggleTodo","updatedTodos","todos","map","done","length","className","type","defaultChecked","text","DialogBox","passToParent","onChangeState","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","AddTodo","handleAddTodo","handleClose","inputRef","createRef","state","val","setState","event","preventDefault","current","value","trim","target","elements","addTodo","Math","random","concat","onSubmit","name","placeholder","ref","App","useState","date","Date","toDateString","bg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a8a8fcc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass DeleteTodo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleDeleteTodo = this.handleDeleteTodo.bind(this);\r\n    }\r\n    handleDeleteTodo() {\r\n        const confirmed = window.confirm(\"Do you want to delete this?\");\r\n        if (confirmed) {\r\n            this.props.setTodos(prevTodos => {\r\n                return prevTodos.filter((t) => t.id !== this.props.todo.id);\r\n            }\r\n            )\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <span role=\"button\"\r\n                onClick={this.handleDeleteTodo}\r\n                style={{\r\n                    color: 'red',\r\n                    fontWeight: 'bold',\r\n                    marginLeft: 10\r\n                }}>\r\n                X\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeleteTodo;\r\n","import React from 'react';\r\nimport DeleteTodo from './DeleteTodo';\r\n\r\nclass TodoList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleToggleTodo = this.handleToggleTodo.bind(this);\r\n    }\r\n\r\n    handleToggleTodo(todo) {\r\n        const updatedTodos = this.props.todos.map(t =>\r\n            t.id === todo.id ?\r\n                {\r\n                    ...t,\r\n                    done: !t.done\r\n                } : t\r\n        )\r\n        this.props.setTodos(updatedTodos)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.todos.length) {\r\n            return (\r\n                <h3 className=\"no-todo\">No TO-Dos, enjoy your day.</h3>\r\n            )\r\n        }\r\n        return (\r\n            <ul>\r\n                {this.props.todos.map(todo => (\r\n                    <li\r\n                        // onDoubleClick={() => this.handleToggleTodo(todo)}\r\n                        // style={{\r\n                        //     textDecoration: todo.done ? 'line-through' : ''\r\n                        // }} \r\n                        key={todo.id} className=\"list-style\">\r\n                        <label>\r\n                            <input type=\"checkbox\" className=\"checkbox\"\r\n                                defaultChecked={todo.done}\r\n                            />\r\n                            {todo.text}\r\n                        </label>\r\n                        <DeleteTodo todo={todo} className=\"button-class\" setTodos={this.props.setTodos} />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\nexport default TodoList;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nclass DialogBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.passToParent = this.passToParent.bind(this);\r\n    }\r\n    passToParent() {\r\n        this.props.onChangeState(false);\r\n    }\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                open={this.props.open}\r\n                onClose={this.passToParent}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\" >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Info\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Can't add empty To-do\r\n        </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.passToParent} color=\"primary\" autoFocus> Ok </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default DialogBox;","import React from 'react';\r\nimport DialogBox from '../common/DialogBox';\r\n\r\nclass AddTodo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleAddTodo = this.handleAddTodo.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.inputRef = React.createRef();\r\n    this.state = { open: false };\r\n  }\r\n  handleClose(val) {\r\n    this.setState({ open: val });\r\n  }\r\n  handleAddTodo(event) {\r\n    event.preventDefault();\r\n    let value = this.inputRef.current.value;\r\n    if (value.trim().length > 0) {\r\n      const text = event.target.elements.addTodo.value;\r\n      const todo = {\r\n        id: Math.random(),\r\n        text,\r\n        done: false\r\n      }\r\n      this.props.setTodos(prevTodos => {\r\n        return prevTodos.concat(todo);\r\n      })\r\n      this.inputRef.current.value = \"\";\r\n    }\r\n    else {\r\n      // window.alert(\"Can't add empty Todos !!\")\r\n      this.setState({ open: true });\r\n    }\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleAddTodo}>\r\n          <input name=\"addTodo\" className=\"add-todo-input\" placeholder=\"Type in your ToDo .. \" ref={this.inputRef} />\r\n          <button className=\"button-class add-todo\" type=\"submit\">Add</button>\r\n        </form>\r\n        <DialogBox open={this.state.open} onChangeState={this.handleClose} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTodo;","import React from 'react';\nimport TodoList from './components/TodoList';\nimport AddTodo from './components/AddTodo';\nimport \"./styles.css\";\nimport ParticlesBg from 'particles-bg'\n\nexport default function App() {\n\n  const [todos, setTodos] = React.useState([\n  ]);\n const color=  [ \"#aac5f0\",\"#a8e381\",\"#ed93a7\"]\n  const date = new Date().toDateString();\n\n  function updateDiary() {\n\n  }\n  function deleteAll() {\n    setTodos(() => {\n      return []\n    });\n  }\n  return (\n    <>\n      <div className=\"App\" >\n        <h1  >TO-DO List </h1>\n        <h3 >Date : {date}</h3>\n      </div>\n      <div >\n        <button className=\"button-class update-diary\" onClick={updateDiary}> Update to Diary </button>\n        <button className=\"button-class  update-diary\" onClick={deleteAll}> Clear All </button>\n        <br /><br />\n        <AddTodo setTodos={setTodos} />\n      </div>\n      <div>\n        <TodoList todos={todos} setTodos={setTodos} />\n      </div>\n      <ParticlesBg color={color} type=\"circle\" bg={true} />\n    </>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App className=\"complete-page\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}